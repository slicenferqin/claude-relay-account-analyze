{"version":3,"file":"AccountsView-Cus8wI8m.js","sources":["../../src/views/AccountsView.vue"],"sourcesContent":["<template>\n  <div class=\"accounts-view\">\n    <!-- 统计卡片网格 -->\n    <div class=\"accounts-grid\">\n      <el-row :gutter=\"16\">\n        <el-col \n          :span=\"6\" \n          v-for=\"account in dashboardStore.accounts.slice(0, 4)\" \n          :key=\"account.accountId\"\n        >\n          <el-card class=\"account-card\" @click=\"showAccountDetail(account)\">\n            <div class=\"account-header\">\n              <div class=\"account-info\">\n                <h3 class=\"account-name\">{{ account.accountName }}</h3>\n                <el-tag :type=\"getStatusTagType(account.status)\" size=\"small\">\n                  {{ getStatusText(account.status) }}\n                </el-tag>\n              </div>\n              <el-icon class=\"account-icon\">\n                <component :is=\"getPlatformIcon(account.platform)\" />\n              </el-icon>\n            </div>\n\n            <div class=\"account-metrics\">\n              <div class=\"metric\">\n                <span class=\"metric-label\">今日Token:</span>\n                <span class=\"metric-value\">{{ formatNumber(account.todayTokenUsage) }}</span>\n              </div>\n              \n              <div class=\"metric\">\n                <span class=\"metric-label\">今日费用:</span>\n                <span class=\"metric-value expense\">{{ formatCurrency(account.todayExpense) }}</span>\n              </div>\n              \n              <div class=\"metric\">\n                <span class=\"metric-label\">近10分钟RPM:</span>\n                <span class=\"metric-value\">{{ account.recentAvgRpm }}</span>\n              </div>\n            </div>\n\n            <div class=\"group-info\" v-if=\"account.group\">\n              <el-divider />\n              <div class=\"group-details\">\n                <div class=\"group-name\">\n                  <el-icon><UserFilled /></el-icon>\n                  <span>{{ account.group.name }}</span>\n                </div>\n                <div class=\"group-stats\">\n                  <span class=\"group-stat\">\n                    总用户: {{ account.group.totalMembers }}\n                  </span>\n                  <span class=\"group-stat\">\n                    活跃: {{ account.group.activeMembers }}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <!-- 最后使用时间 -->\n            <div class=\"last-used\">\n              <el-text type=\"info\" size=\"small\">\n                最后使用: {{ formatTime(account.lastUsedAt) }}\n              </el-text>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n\n    <!-- 详细统计表格 -->\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>账号详细统计</span>\n          <div class=\"header-actions\">\n            <el-input\n              v-model=\"searchQuery\"\n              placeholder=\"搜索账号\"\n              :prefix-icon=\"Search\"\n              clearable\n              style=\"width: 200px; margin-right: 8px;\"\n            />\n            <el-select \n              v-model=\"platformFilter\" \n              placeholder=\"选择平台\"\n              clearable\n              style=\"width: 150px; margin-right: 8px;\"\n            >\n              <el-option label=\"全部平台\" value=\"\" />\n              <el-option label=\"Claude Console\" value=\"claude-console\" />\n              <el-option label=\"Claude\" value=\"claude\" />\n              <el-option label=\"Gemini\" value=\"gemini\" />\n              <el-option label=\"OpenAI\" value=\"openai\" />\n            </el-select>\n            <el-button \n              type=\"primary\" \n              :icon=\"Refresh\"\n              :loading=\"dashboardStore.loading\"\n              @click=\"refreshData\"\n            >\n              刷新\n            </el-button>\n          </div>\n        </div>\n      </template>\n\n      <el-table \n        :data=\"filteredAccounts\" \n        v-loading=\"dashboardStore.loading\"\n        stripe\n        height=\"500\"\n        @row-click=\"showAccountDetail\"\n      >\n        <el-table-column prop=\"accountName\" label=\"账号名称\" width=\"150\">\n          <template #default=\"{ row }\">\n            <div class=\"account-name-cell\">\n              <el-text strong>{{ row.accountName }}</el-text>\n              <el-tag :type=\"getPlatformTagType(row.platform)\" size=\"small\">\n                {{ getPlatformName(row.platform) }}\n              </el-tag>\n            </div>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"todayTokenUsage\" label=\"今日Token使用量\" width=\"130\" sortable>\n          <template #default=\"{ row }\">\n            <span class=\"token-usage\">{{ formatNumber(row.todayTokenUsage) }}</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"todayExpense\" label=\"今日费用消耗\" width=\"120\" sortable>\n          <template #default=\"{ row }\">\n            <span class=\"expense\">{{ formatCurrency(row.todayExpense) }}</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"recentAvgRpm\" label=\"近10分钟RPM\" width=\"120\" sortable>\n          <template #default=\"{ row }\">\n            <div class=\"rpm-cell\">\n              <el-progress \n                :percentage=\"getRpmPercentage(row.recentAvgRpm)\"\n                :stroke-width=\"6\"\n                :show-text=\"false\"\n                :color=\"getRpmColor(row.recentAvgRpm)\"\n              />\n              <span class=\"rpm-value\">{{ row.recentAvgRpm }}</span>\n            </div>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"group\" label=\"账号所属分组\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag v-if=\"row.group\" type=\"primary\" size=\"small\">\n              {{ row.group.name }}\n            </el-tag>\n            <span v-else class=\"no-group\">无分组</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"group.totalMembers\" label=\"分组用户数\" width=\"100\">\n          <template #default=\"{ row }\">\n            <span v-if=\"row.group\">{{ row.group.totalMembers }}</span>\n            <span v-else>-</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"group.activeMembers\" label=\"分组活跃用户\" width=\"120\">\n          <template #default=\"{ row }\">\n            <span v-if=\"row.group\" class=\"active-users\">\n              {{ row.group.activeMembers }}/{{ row.group.totalMembers }}\n            </span>\n            <span v-else>-</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"status\" label=\"状态\" width=\"80\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"getStatusTagType(row.status)\" size=\"small\">\n              {{ getStatusText(row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"lastUsedAt\" label=\"最后使用时间\" width=\"140\">\n          <template #default=\"{ row }\">\n            <el-tooltip :content=\"new Date(row.lastUsedAt).toLocaleString()\">\n              <span>{{ formatTime(row.lastUsedAt) }}</span>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"操作\" width=\"120\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button size=\"small\" @click.stop=\"showAccountDetail(row)\">\n              详情\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 账号详情对话框 -->\n    <el-dialog \n      v-model=\"showDetailDialog\" \n      :title=\"`账号详情: ${selectedAccount?.accountName}`\"\n      width=\"1000px\"\n    >\n      <div v-if=\"selectedAccount\" class=\"account-details\">\n        <el-tabs>\n          <el-tab-pane label=\"基本信息\" name=\"basic\">\n            <el-row :gutter=\"16\">\n              <el-col :span=\"12\">\n                <el-descriptions title=\"账号信息\" :column=\"1\" border>\n                  <el-descriptions-item label=\"账号名称\">\n                    {{ selectedAccount.accountName }}\n                  </el-descriptions-item>\n                  <el-descriptions-item label=\"平台\">\n                    <el-tag :type=\"getPlatformTagType(selectedAccount.platform)\">\n                      {{ getPlatformName(selectedAccount.platform) }}\n                    </el-tag>\n                  </el-descriptions-item>\n                  <el-descriptions-item label=\"状态\">\n                    <el-tag :type=\"getStatusTagType(selectedAccount.status)\">\n                      {{ getStatusText(selectedAccount.status) }}\n                    </el-tag>\n                  </el-descriptions-item>\n                  <el-descriptions-item label=\"是否活跃\">\n                    <el-tag :type=\"selectedAccount.isActive ? 'success' : 'danger'\">\n                      {{ selectedAccount.isActive ? '是' : '否' }}\n                    </el-tag>\n                  </el-descriptions-item>\n                  <el-descriptions-item label=\"最后使用时间\">\n                    {{ new Date(selectedAccount.lastUsedAt).toLocaleString() }}\n                  </el-descriptions-item>\n                </el-descriptions>\n              </el-col>\n              \n              <el-col :span=\"12\">\n                <el-descriptions title=\"分组信息\" :column=\"1\" border>\n                  <el-descriptions-item label=\"所属分组\">\n                    <el-tag v-if=\"selectedAccount.group\" type=\"primary\">\n                      {{ selectedAccount.group.name }}\n                    </el-tag>\n                    <span v-else>无分组</span>\n                  </el-descriptions-item>\n                  <el-descriptions-item label=\"分组总用户数\" v-if=\"selectedAccount.group\">\n                    {{ selectedAccount.group.totalMembers }}\n                  </el-descriptions-item>\n                  <el-descriptions-item label=\"分组活跃用户数\" v-if=\"selectedAccount.group\">\n                    {{ selectedAccount.group.activeMembers }}\n                  </el-descriptions-item>\n                </el-descriptions>\n              </el-col>\n            </el-row>\n          </el-tab-pane>\n\n          <el-tab-pane label=\"使用统计\" name=\"usage\">\n            <el-row :gutter=\"16\">\n              <el-col :span=\"8\">\n                <el-statistic title=\"今日Token使用量\" :value=\"selectedAccount.todayTokenUsage\" />\n              </el-col>\n              <el-col :span=\"8\">\n                <el-statistic title=\"今日费用消耗\" :value=\"selectedAccount.todayExpense\" precision=\"2\" prefix=\"$\" />\n              </el-col>\n              <el-col :span=\"8\">\n                <el-statistic title=\"近10分钟平均RPM\" :value=\"selectedAccount.recentAvgRpm\" />\n              </el-col>\n            </el-row>\n\n            <!-- 这里可以添加图表展示 -->\n            <div class=\"usage-charts\" style=\"margin-top: 20px;\">\n              <el-text type=\"info\">使用趋势图表功能开发中...</el-text>\n            </div>\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue';\nimport { \n  Search, Refresh, UserFilled, \n  Monitor, Connection \n} from '@element-plus/icons-vue';\nimport { useDashboardStore } from '../stores/dashboard';\nimport { useSocketStore } from '../stores/socket';\nimport { formatTime, formatNumber, formatCurrency } from '../utils/format';\nimport type { AccountStatistics } from \"../types/account\";\n\nconst dashboardStore = useDashboardStore();\nconst socketStore = useSocketStore();\n\n// 响应式数据\nconst searchQuery = ref('');\nconst platformFilter = ref('');\nconst showDetailDialog = ref(false);\nconst selectedAccount = ref<AccountStatistics | null>(null);\n\n// 计算属性\nconst filteredAccounts = computed(() => {\n  let result = dashboardStore.accounts;\n\n  if (searchQuery.value) {\n    const query = searchQuery.value.toLowerCase();\n    result = result.filter(account =>\n      account.accountName.toLowerCase().includes(query) ||\n      account.accountId.toLowerCase().includes(query)\n    );\n  }\n\n  if (platformFilter.value) {\n    result = result.filter(account => \n      account.platform === platformFilter.value\n    );\n  }\n\n  return result;\n});\n\n// 方法\nconst refreshData = async () => {\n  await dashboardStore.fetchAccounts();\n};\n\nconst showAccountDetail = (account: AccountStatistics) => {\n  selectedAccount.value = account;\n  showDetailDialog.value = true;\n  \n  // 订阅实时更新\n  socketStore.subscribeToAccount(account.accountId);\n};\n\nconst getPlatformIcon = (platform: string) => {\n  switch (platform) {\n    case 'claude-console':\n    case 'claude':\n      return Monitor;\n    case 'gemini':\n      return Monitor;\n    case 'openai':\n      return Connection;\n    default:\n      return Monitor;\n  }\n};\n\nconst getPlatformName = (platform: string): string => {\n  const names: Record<string, string> = {\n    'claude-console': 'Claude Console',\n    'claude': 'Claude',\n    'gemini': 'Gemini',\n    'openai': 'OpenAI',\n    'bedrock': 'Bedrock',\n    'azure-openai': 'Azure OpenAI'\n  };\n  return names[platform] || platform;\n};\n\nconst getPlatformTagType = (platform: string) => {\n  const types: Record<string, string> = {\n    'claude-console': 'primary',\n    'claude': 'success',\n    'gemini': 'warning',\n    'openai': 'info'\n  };\n  return types[platform] || 'info';\n};\n\nconst getStatusText = (status: string): string => {\n  const texts: Record<string, string> = {\n    'active': '活跃',\n    'expired': '已过期',\n    'error': '错误',\n    'created': '已创建'\n  };\n  return texts[status] || status;\n};\n\nconst getStatusTagType = (status: string) => {\n  const types: Record<string, string> = {\n    'active': 'success',\n    'expired': 'warning',\n    'error': 'danger',\n    'created': 'info'\n  };\n  return types[status] || 'info';\n};\n\nconst getRpmPercentage = (rpm: number): number => {\n  const maxRpm = 100;\n  return Math.min((rpm / maxRpm) * 100, 100);\n};\n\nconst getRpmColor = (rpm: number): string => {\n  if (rpm < 20) return '#67c23a';\n  if (rpm < 60) return '#e6a23c';\n  return '#f56c6c';\n};\n\n// 生命周期\nonMounted(() => {\n  refreshData();\n});\n</script>\n\n<style scoped>\n.accounts-view {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.accounts-grid {\n  margin-bottom: 16px;\n}\n\n.account-card {\n  cursor: pointer;\n  transition: all 0.3s ease;\n  height: 100%;\n}\n\n.account-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.account-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 16px;\n}\n\n.account-info h3 {\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.account-icon {\n  font-size: 24px;\n  color: #3b82f6;\n}\n\n.account-metrics {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 16px;\n}\n\n.metric {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.metric-label {\n  font-size: 12px;\n  color: #6b7280;\n}\n\n.metric-value {\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.metric-value.expense {\n  color: #ef4444;\n}\n\n.group-info {\n  margin-top: 12px;\n}\n\n.group-details {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.group-name {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 12px;\n  color: #374151;\n}\n\n.group-stats {\n  display: flex;\n  gap: 8px;\n}\n\n.group-stat {\n  font-size: 11px;\n  color: #6b7280;\n}\n\n.last-used {\n  margin-top: 8px;\n  text-align: right;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n}\n\n.account-name-cell {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.token-usage {\n  font-weight: 600;\n  color: #059669;\n}\n\n.expense {\n  font-weight: 600;\n  color: #dc2626;\n}\n\n.rpm-cell {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.rpm-value {\n  font-size: 12px;\n  font-weight: bold;\n}\n\n.no-group {\n  color: #9ca3af;\n  font-size: 12px;\n}\n\n.active-users {\n  font-weight: 600;\n  color: #059669;\n}\n\n.account-details {\n  padding: 16px 0;\n}\n\n.usage-charts {\n  padding: 20px;\n  background: #f9fafb;\n  border-radius: 8px;\n  text-align: center;\n}\n</style>"],"names":["dashboardStore","useDashboardStore","socketStore","useSocketStore","searchQuery","ref","platformFilter","showDetailDialog","selectedAccount","filteredAccounts","computed","result","query","account","refreshData","showAccountDetail","getPlatformIcon","platform","Monitor","Connection","getPlatformName","getPlatformTagType","getStatusText","status","getStatusTagType","getRpmPercentage","rpm","getRpmColor","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_row","_withCtx","_Fragment","_renderList","_unref","_component_el_card","$event","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","_component_el_tag","_createTextVNode","_createBlock","_resolveDynamicComponent","_hoisted_7","_cache","_hoisted_8","formatNumber","_hoisted_10","formatCurrency","_hoisted_12","_component_el_divider","_hoisted_14","_hoisted_15","_component_el_icon","UserFilled","_hoisted_17","_hoisted_18","_component_el_text","formatTime","_hoisted_20","_hoisted_21","_component_el_input","Search","_component_el_option","Refresh","_withDirectives","_component_el_table","_component_el_table_column","_hoisted_22","row","_hoisted_23","_hoisted_24","_hoisted_25","_component_el_progress","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_component_el_tooltip","_component_el_button","_withModifiers","_a","_hoisted_32","_component_el_tabs","_component_el_tab_pane","_component_el_col","_component_el_descriptions","_component_el_descriptions_item","_component_el_statistic"],"mappings":"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"}