{"version":3,"file":"GroupsView-D-enqHW_.js","sources":["../../src/views/GroupsView.vue"],"sourcesContent":["<template>\n  <div class=\"groups-view\">\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>分组管理</span>\n          <el-button type=\"primary\" :icon=\"Refresh\" @click=\"refreshGroups\">\n            刷新\n          </el-button>\n        </div>\n      </template>\n\n      <div class=\"groups-grid\">\n        <el-row :gutter=\"16\">\n          <el-col \n            :span=\"8\" \n            v-for=\"group in dashboardStore.groups\" \n            :key=\"group.id\"\n            style=\"margin-bottom: 16px;\"\n          >\n            <el-card class=\"group-card\" @click=\"showGroupDetails(group)\">\n              <div class=\"group-header\">\n                <h3 class=\"group-name\">{{ group.name }}</h3>\n                <el-tag type=\"primary\" size=\"small\">{{ group.platform }}</el-tag>\n              </div>\n\n              <div class=\"group-stats\">\n                <div class=\"stat\">\n                  <span class=\"stat-label\">成员数量:</span>\n                  <span class=\"stat-value\">{{ group.memberCount }}</span>\n                </div>\n                <div class=\"stat\">\n                  <span class=\"stat-label\">创建时间:</span>\n                  <span class=\"stat-value\">{{ formatTime(group.createdAt) }}</span>\n                </div>\n              </div>\n\n              <div class=\"group-description\" v-if=\"group.description\">\n                <el-text type=\"info\" size=\"small\">{{ group.description }}</el-text>\n              </div>\n            </el-card>\n          </el-col>\n        </el-row>\n      </div>\n\n      <div v-if=\"dashboardStore.groups.length === 0\" class=\"empty-state\">\n        <el-empty description=\"暂无分组数据\" />\n      </div>\n    </el-card>\n\n    <!-- 分组详情对话框 -->\n    <el-dialog \n      v-model=\"showDetailDialog\" \n      :title=\"`分组详情: ${selectedGroup?.name}`\"\n      width=\"800px\"\n    >\n      <div v-if=\"selectedGroup && groupMembers\" class=\"group-details\">\n        <el-descriptions title=\"分组信息\" :column=\"2\" border>\n          <el-descriptions-item label=\"分组名称\">\n            {{ selectedGroup.name }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"平台\">\n            {{ selectedGroup.platform }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"成员数量\">\n            {{ selectedGroup.memberCount }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"创建时间\">\n            {{ new Date(selectedGroup.createdAt).toLocaleString() }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"描述\" :span=\"2\">\n            {{ selectedGroup.description || '无描述' }}\n          </el-descriptions-item>\n        </el-descriptions>\n\n        <el-divider />\n\n        <h4>成员账户</h4>\n        <el-table :data=\"groupMembers.accounts\" stripe>\n          <el-table-column prop=\"accountName\" label=\"账户名称\" />\n          <el-table-column prop=\"platform\" label=\"平台\" />\n          <el-table-column prop=\"isActive\" label=\"状态\">\n            <template #default=\"{ row }\">\n              <el-tag :type=\"row.isActive ? 'success' : 'danger'\" size=\"small\">\n                {{ row.isActive ? '活跃' : '非活跃' }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"lastUsedAt\" label=\"最后使用时间\">\n            <template #default=\"{ row }\">\n              {{ formatTime(row.lastUsedAt) }}\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <el-divider />\n\n        <h4>关联API Keys</h4>\n        <el-table :data=\"groupMembers.apiKeys\" stripe>\n          <el-table-column prop=\"name\" label=\"API Key名称\" />\n          <el-table-column prop=\"isActive\" label=\"状态\">\n            <template #default=\"{ row }\">\n              <el-tag :type=\"row.isActive ? 'success' : 'danger'\" size=\"small\">\n                {{ row.isActive ? '活跃' : '非活跃' }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"rpm\" label=\"RPM\" />\n          <el-table-column prop=\"usage.today.cost\" label=\"今日费用\">\n            <template #default=\"{ row }\">\n              {{ formatCurrency(row.usage?.today?.cost || 0) }}\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue';\nimport { Refresh } from '@element-plus/icons-vue';\nimport { useDashboardStore } from '../stores/dashboard';\nimport { formatTime, formatCurrency } from '../utils/format';\nimport type { AccountGroup } from \"../types/group\";\n\nconst dashboardStore = useDashboardStore();\n\n// 响应式数据\nconst showDetailDialog = ref(false);\nconst selectedGroup = ref<AccountGroup | null>(null);\nconst groupMembers = ref<any>(null);\n\n// 方法\nconst refreshGroups = async () => {\n  await dashboardStore.fetchGroups();\n};\n\nconst showGroupDetails = async (group: AccountGroup) => {\n  selectedGroup.value = group;\n  showDetailDialog.value = true;\n  \n  try {\n    groupMembers.value = await dashboardStore.getGroupMembers(group.id);\n  } catch (error) {\n    console.error('Error loading group members:', error);\n  }\n};\n\n// 生命周期\nonMounted(() => {\n  refreshGroups();\n});\n</script>\n\n<style scoped>\n.groups-view {\n  padding: 0;\n  height: 100%;\n  min-height: 0;\n  display: flex;\n  flex-direction: column;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.groups-grid {\n  min-height: 400px;\n}\n\n.group-card {\n  cursor: pointer;\n  transition: all 0.3s ease;\n  height: 160px;\n}\n\n.group-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.group-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.group-name {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.group-stats {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 12px;\n}\n\n.stat {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.stat-label {\n  font-size: 12px;\n  color: #6b7280;\n}\n\n.stat-value {\n  font-size: 12px;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.group-description {\n  margin-top: 12px;\n}\n\n.empty-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 400px;\n}\n\n.group-details {\n  padding: 16px 0;\n}\n\n.group-details h4 {\n  margin: 16px 0 8px 0;\n  color: #1f2937;\n}\n</style>"],"names":["dashboardStore","useDashboardStore","showDetailDialog","ref","selectedGroup","groupMembers","refreshGroups","showGroupDetails","group","error","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_withCtx","_createElementVNode","_hoisted_2","_cache","_component_el_button","_unref","Refresh","_createTextVNode","_hoisted_3","_component_el_row","_Fragment","_renderList","$event","_hoisted_4","_hoisted_5","_toDisplayString","_component_el_tag","_hoisted_7","_hoisted_8","_hoisted_10","formatTime","_component_el_text","_component_el_empty","_createCommentVNode","_a","_hoisted_13","_component_el_descriptions","_component_el_descriptions_item","_component_el_table","_component_el_table_column","row","formatCurrency","_b"],"mappings":"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"}