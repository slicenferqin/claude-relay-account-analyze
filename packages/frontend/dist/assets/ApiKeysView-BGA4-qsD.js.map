{"version":3,"file":"ApiKeysView-BGA4-qsD.js","sources":["../../src/views/ApiKeysView.vue"],"sourcesContent":["<template>\n  <div class=\"api-keys-view\">\n    <!-- 头部操作区 -->\n    <div class=\"header-actions\">\n      <div class=\"filters\">\n        <el-space>\n          <el-select \n            v-model=\"filters.groupId\" \n            placeholder=\"选择分组\"\n            clearable\n            @change=\"applyFilters\"\n          >\n            <el-option label=\"全部分组\" value=\"\" />\n            <el-option \n              v-for=\"group in dashboardStore.groups\" \n              :key=\"group.id\"\n              :label=\"group.name\" \n              :value=\"group.id\" \n            />\n          </el-select>\n\n          <el-select \n            v-model=\"filters.isActive\" \n            placeholder=\"状态\"\n            @change=\"applyFilters\"\n          >\n            <el-option label=\"全部状态\" :value=\"undefined\" />\n            <el-option label=\"活跃\" :value=\"true\" />\n            <el-option label=\"非活跃\" :value=\"false\" />\n          </el-select>\n\n          <el-input\n            v-model=\"filters.search\"\n            placeholder=\"搜索API Key\"\n            :prefix-icon=\"Search\"\n            clearable\n            @input=\"onSearchInput\"\n            style=\"width: 200px\"\n          />\n        </el-space>\n      </div>\n\n      <div class=\"actions\">\n        <el-button \n          type=\"primary\" \n          :icon=\"Refresh\"\n          :loading=\"dashboardStore.loading\"\n          @click=\"refreshData\"\n        >\n          刷新\n        </el-button>\n        \n        <el-button :icon=\"Download\" @click=\"exportData\">\n          导出\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 统计卡片 -->\n    <div class=\"stats-cards\">\n      <el-row :gutter=\"16\">\n        <el-col :span=\"6\">\n          <el-card>\n            <div class=\"stat-card\">\n              <div class=\"stat-value\">{{ dashboardStore.activeApiKeys.length }}</div>\n              <div class=\"stat-label\">活跃API Keys</div>\n              <el-icon class=\"stat-icon\"><Key /></el-icon>\n            </div>\n          </el-card>\n        </el-col>\n        \n        <el-col :span=\"6\">\n          <el-card>\n            <div class=\"stat-card\">\n              <div class=\"stat-value\">{{ formatCurrency(dashboardStore.totalDailyCost) }}</div>\n              <div class=\"stat-label\">今日总消费</div>\n              <el-icon class=\"stat-icon\"><Money /></el-icon>\n            </div>\n          </el-card>\n        </el-col>\n        \n        <el-col :span=\"6\">\n          <el-card>\n            <div class=\"stat-card\">\n              <div class=\"stat-value\">{{ formatNumber(dashboardStore.totalTodayRequests) }}</div>\n              <div class=\"stat-label\">今日总请求</div>\n              <el-icon class=\"stat-icon\"><Promotion /></el-icon>\n            </div>\n          </el-card>\n        </el-col>\n        \n        <el-col :span=\"6\">\n          <el-card>\n            <div class=\"stat-card\">\n              <div class=\"stat-value\">{{ dashboardStore.averageRPM }}</div>\n              <div class=\"stat-label\">平均RPM</div>\n              <el-icon class=\"stat-icon\"><Timer /></el-icon>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n\n    <!-- API Keys表格 -->\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>API Key 列表</span>\n          <el-text type=\"info\" size=\"small\">\n            共 {{ filteredApiKeys.length }} 个API Key\n          </el-text>\n        </div>\n      </template>\n\n      <el-table \n        :data=\"filteredApiKeys\" \n        v-loading=\"dashboardStore.loading\"\n        stripe\n        height=\"600\"\n        @row-click=\"showApiKeyDetail\"\n      >\n        <el-table-column prop=\"name\" label=\"API Key名称\" width=\"200\">\n          <template #default=\"{ row }\">\n            <div class=\"api-key-name\">\n              <el-text strong>{{ row.name }}</el-text>\n              <div class=\"tags\" v-if=\"row.tags?.length\">\n                <el-tag \n                  v-for=\"tag in row.tags.slice(0, 2)\" \n                  :key=\"tag\"\n                  size=\"small\"\n                  type=\"info\"\n                >\n                  {{ tag }}\n                </el-tag>\n                <el-text v-if=\"row.tags.length > 2\" size=\"small\" type=\"info\">\n                  +{{ row.tags.length - 2 }}\n                </el-text>\n              </div>\n            </div>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"lastUsedAt\" label=\"最后使用时间\" width=\"150\">\n          <template #default=\"{ row }\">\n            <el-tooltip :content=\"new Date(row.lastUsedAt).toLocaleString()\">\n              <span>{{ formatTime(row.lastUsedAt) }}</span>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"rpm\" label=\"RPM\" width=\"120\" sortable>\n          <template #default=\"{ row }\">\n            <div class=\"rpm-display\">\n              <el-progress \n                :percentage=\"calculateRpmPercentage(row.rpm)\"\n                :color=\"getRpmColor(row.rpm)\"\n                :stroke-width=\"6\"\n                :show-text=\"false\"\n              />\n              <span class=\"rpm-text\">{{ row.rpm }}</span>\n            </div>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"currentGroup\" label=\"所属分组\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag v-if=\"row.currentGroup\" type=\"primary\" size=\"small\">\n              {{ row.currentGroup.name }}\n            </el-tag>\n            <el-text v-else type=\"info\" size=\"small\">未分组</el-text>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"usage.today.cost\" label=\"今日消费\" width=\"100\" sortable>\n          <template #default=\"{ row }\">\n            <span :class=\"getCostClass(row.usage?.today?.cost || 0)\">\n              {{ formatCurrency(row.usage?.today?.cost || 0) }}\n            </span>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"usage.today.requests\" label=\"今日请求\" width=\"100\" sortable>\n          <template #default=\"{ row }\">\n            {{ formatNumber(row.usage?.today?.requests || 0) }}\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"usage.today.totalTokens\" label=\"今日Token\" width=\"120\" sortable>\n          <template #default=\"{ row }\">\n            {{ formatNumber(row.usage?.today?.totalTokens || 0) }}\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"isActive\" label=\"状态\" width=\"80\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"row.isActive ? 'success' : 'danger'\" size=\"small\">\n              {{ row.isActive ? '活跃' : '非活跃' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-space>\n              <el-button size=\"small\" @click.stop=\"showApiKeyDetail(row)\">\n                详情\n              </el-button>\n              <el-button size=\"small\" @click.stop=\"showUsageChart(row)\">\n                趋势\n              </el-button>\n            </el-space>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- API Key详情对话框 -->\n    <el-dialog \n      v-model=\"showDetailDialog\" \n      :title=\"`API Key: ${selectedApiKey?.name}`\"\n      width=\"800px\"\n    >\n      <div v-if=\"selectedApiKey\" class=\"api-key-details\">\n        <el-row :gutter=\"16\">\n          <el-col :span=\"12\">\n            <el-descriptions title=\"基本信息\" :column=\"1\" border>\n              <el-descriptions-item label=\"名称\">\n                {{ selectedApiKey.name }}\n              </el-descriptions-item>\n              <el-descriptions-item label=\"描述\">\n                {{ selectedApiKey.description || '无' }}\n              </el-descriptions-item>\n              <el-descriptions-item label=\"状态\">\n                <el-tag :type=\"selectedApiKey.isActive ? 'success' : 'danger'\">\n                  {{ selectedApiKey.isActive ? '活跃' : '非活跃' }}\n                </el-tag>\n              </el-descriptions-item>\n              <el-descriptions-item label=\"所属分组\">\n                <el-tag v-if=\"selectedApiKey.currentGroup\" type=\"primary\">\n                  {{ selectedApiKey.currentGroup.name }}\n                </el-tag>\n                <span v-else>未分组</span>\n              </el-descriptions-item>\n              <el-descriptions-item label=\"最后使用\">\n                {{ new Date(selectedApiKey.lastUsedAt).toLocaleString() }}\n              </el-descriptions-item>\n            </el-descriptions>\n          </el-col>\n          \n          <el-col :span=\"12\">\n            <el-descriptions title=\"使用统计\" :column=\"1\" border>\n              <el-descriptions-item label=\"RPM\">\n                {{ selectedApiKey.rpm }}\n              </el-descriptions-item>\n              <el-descriptions-item label=\"今日请求\">\n                {{ formatNumber(selectedApiKey.usage?.today?.requests || 0) }}\n              </el-descriptions-item>\n              <el-descriptions-item label=\"今日Token\">\n                {{ formatNumber(selectedApiKey.usage?.today?.totalTokens || 0) }}\n              </el-descriptions-item>\n              <el-descriptions-item label=\"今日费用\">\n                {{ formatCurrency(selectedApiKey.usage?.today?.cost || 0) }}\n              </el-descriptions-item>\n              <el-descriptions-item label=\"费用限制\">\n                {{ selectedApiKey.limits?.dailyCostLimit \n                   ? formatCurrency(selectedApiKey.limits.dailyCostLimit) \n                   : '无限制' }}\n              </el-descriptions-item>\n            </el-descriptions>\n          </el-col>\n        </el-row>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\nimport { Search, Refresh, Download, Key, Money, Promotion, Timer } from '@element-plus/icons-vue';\nimport { useDashboardStore } from '../stores/dashboard';\nimport { useSocketStore } from '../stores/socket';\nimport { formatTime, formatNumber, formatCurrency } from '../utils/format';\nimport { debounce } from 'lodash-es';\nimport type { ApiKeyStatistics } from \"../types/apikey\";\n\nconst dashboardStore = useDashboardStore();\nconst socketStore = useSocketStore();\n\n// 响应式数据\nconst filters = ref({\n  groupId: '',\n  isActive: true,\n  search: ''\n});\n\nconst showDetailDialog = ref(false);\nconst selectedApiKey = ref<ApiKeyStatistics | null>(null);\n\n// 计算属性\nconst filteredApiKeys = computed(() => {\n  let result = dashboardStore.apiKeys;\n\n  if (filters.value.groupId) {\n    result = result.filter(key => \n      key.currentGroup?.id === filters.value.groupId\n    );\n  }\n\n  if (filters.value.isActive !== undefined) {\n    result = result.filter(key => \n      key.isActive === filters.value.isActive\n    );\n  }\n\n  if (filters.value.search) {\n    const searchTerm = filters.value.search.toLowerCase();\n    result = result.filter(key =>\n      key.name.toLowerCase().includes(searchTerm) ||\n      key.description?.toLowerCase().includes(searchTerm) ||\n      key.keyId.toLowerCase().includes(searchTerm)\n    );\n  }\n\n  return result;\n});\n\n// 方法\nconst applyFilters = () => {\n  dashboardStore.updateApiKeyFilters({\n    groupId: filters.value.groupId || undefined,\n    isActive: filters.value.isActive,\n    search: filters.value.search || undefined\n  });\n};\n\nconst onSearchInput = debounce(() => {\n  applyFilters();\n}, 500);\n\nconst refreshData = async () => {\n  await dashboardStore.fetchApiKeys();\n};\n\nconst exportData = () => {\n  // TODO: 实现数据导出\n  console.log('Export API Keys data');\n};\n\nconst showApiKeyDetail = (apiKey: ApiKeyStatistics) => {\n  selectedApiKey.value = apiKey;\n  showDetailDialog.value = true;\n  \n  // 订阅实时更新\n  socketStore.subscribeToApiKey(apiKey.keyId);\n};\n\nconst showUsageChart = (apiKey: ApiKeyStatistics) => {\n  // TODO: 显示使用趋势图表\n  console.log('Show usage chart for', apiKey.name);\n};\n\nconst calculateRpmPercentage = (rpm: number): number => {\n  // 假设最大RPM为100，可以根据实际情况调整\n  const maxRpm = 100;\n  return Math.min((rpm / maxRpm) * 100, 100);\n};\n\nconst getRpmColor = (rpm: number): string => {\n  if (rpm < 10) return '#67c23a';  // 绿色\n  if (rpm < 50) return '#e6a23c';  // 橙色\n  return '#f56c6c';  // 红色\n};\n\nconst getCostClass = (cost: number): string => {\n  if (cost > 50) return 'high-cost';\n  if (cost > 20) return 'medium-cost';\n  return 'low-cost';\n};\n\n// 生命周期\nonMounted(() => {\n  // 刷新数据\n  refreshData();\n});\n\nonUnmounted(() => {\n  // 取消所有订阅\n  dashboardStore.apiKeys.forEach(apiKey => {\n    socketStore.unsubscribe('apikey', apiKey.keyId);\n  });\n});\n</script>\n\n<style scoped>\n.api-keys-view {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.header-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.stats-cards {\n  margin-bottom: 16px;\n}\n\n.stat-card {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: bold;\n  color: #1f2937;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #6b7280;\n  margin-top: 4px;\n}\n\n.stat-icon {\n  font-size: 32px;\n  color: #3b82f6;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.api-key-name {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.tags {\n  display: flex;\n  gap: 4px;\n  align-items: center;\n}\n\n.rpm-display {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.rpm-text {\n  font-size: 12px;\n  font-weight: bold;\n}\n\n.high-cost {\n  color: #f56c6c;\n  font-weight: bold;\n}\n\n.medium-cost {\n  color: #e6a23c;\n  font-weight: bold;\n}\n\n.low-cost {\n  color: #67c23a;\n}\n\n.api-key-details {\n  padding: 16px 0;\n}\n</style>"],"names":["dashboardStore","useDashboardStore","socketStore","useSocketStore","filters","ref","showDetailDialog","selectedApiKey","filteredApiKeys","computed","result","key","_a","searchTerm","applyFilters","onSearchInput","debounce","refreshData","exportData","showApiKeyDetail","apiKey","showUsageChart","calculateRpmPercentage","rpm","getRpmColor","getCostClass","cost","onMounted","onUnmounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_space","_withCtx","_component_el_select","_cache","$event","_component_el_option","group","_unref","Search","_component_el_button","Refresh","_createTextVNode","Download","_component_el_row","_component_el_col","_component_el_card","_hoisted_6","_hoisted_7","_toDisplayString","_component_el_icon","Key","_hoisted_8","_hoisted_9","formatCurrency","Money","_hoisted_10","_hoisted_11","formatNumber","Promotion","_hoisted_12","_hoisted_13","Timer","_hoisted_14","_component_el_text","_withDirectives","_createBlock","_component_el_table","_component_el_table_column","_hoisted_15","row","_Fragment","_renderList","tag","_component_el_tooltip","formatTime","_hoisted_17","_component_el_progress","_component_el_tag","_normalizeClass","_b","_d","_c","_withModifiers","_hoisted_19","_component_el_descriptions","_component_el_descriptions_item"],"mappings":"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"}