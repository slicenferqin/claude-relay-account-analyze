{"version":3,"file":"DashboardLayout-BkAs-T3x.js","sources":["../../src/views/DashboardLayout.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-layout\">\n    <el-container>\n      <!-- 侧边栏 -->\n      <el-aside width=\"250px\" class=\"sidebar\">\n        <div class=\"logo\">\n          <h2>账号看板</h2>\n          <span class=\"subtitle\">Account Dashboard</span>\n        </div>\n        \n        <el-menu\n          :default-active=\"activeMenu\"\n          class=\"sidebar-menu\"\n          router\n          unique-opened\n        >\n          <el-menu-item index=\"/dashboard/overview\">\n            <el-icon><Odometer /></el-icon>\n            <span>总览</span>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/dashboard/apikeys\">\n            <el-icon><Key /></el-icon>\n            <span>API Key管理</span>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/dashboard/accounts\">\n            <el-icon><User /></el-icon>\n            <span>账号管理</span>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/dashboard/groups\">\n            <el-icon><UserFilled /></el-icon>\n            <span>分组管理</span>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/dashboard/analytics\">\n            <el-icon><TrendCharts /></el-icon>\n            <span>数据分析</span>\n          </el-menu-item>\n        </el-menu>\n      </el-aside>\n\n      <el-container>\n        <!-- 顶部栏 -->\n        <el-header class=\"header\">\n          <div class=\"header-left\">\n            <h3 class=\"page-title\">{{ currentPageTitle }}</h3>\n            <el-breadcrumb separator=\"/\">\n              <el-breadcrumb-item>看板</el-breadcrumb-item>\n              <el-breadcrumb-item>{{ currentPageTitle }}</el-breadcrumb-item>\n            </el-breadcrumb>\n          </div>\n          \n          <div class=\"header-right\">\n            <!-- 连接状态指示器 -->\n            <div class=\"connection-status\">\n              <el-tooltip :content=\"connectionStatusText\" placement=\"bottom\">\n                <el-icon \n                  :class=\"['status-icon', connectionStatusClass]\"\n                  :size=\"16\"\n                >\n                  <component :is=\"connectionStatusIcon\" />\n                </el-icon>\n              </el-tooltip>\n            </div>\n\n            <!-- 最后刷新时间 -->\n            <div class=\"last-refresh\" v-if=\"lastRefresh\">\n              <el-text size=\"small\" type=\"info\">\n                最后刷新: {{ formatTime(lastRefresh) }}\n              </el-text>\n            </div>\n\n            <!-- 自动刷新控制 -->\n            <el-switch\n              v-model=\"dashboardStore.isAutoRefresh\"\n              inline-prompt\n              active-text=\"自动\"\n              inactive-text=\"手动\"\n              @change=\"onAutoRefreshChange\"\n            />\n\n            <!-- 刷新按钮 -->\n            <el-button \n              circle \n              :icon=\"Refresh\" \n              :loading=\"dashboardStore.loading\"\n              @click=\"refreshData\"\n              title=\"刷新数据\"\n            />\n\n            <!-- 设置 -->\n            <el-dropdown @command=\"handleSettingsCommand\">\n              <el-button circle :icon=\"Setting\" />\n              <template #dropdown>\n                <el-dropdown-menu>\n                  <el-dropdown-item command=\"refresh-interval\">刷新间隔</el-dropdown-item>\n                  <el-dropdown-item command=\"export\">导出数据</el-dropdown-item>\n                  <el-dropdown-item command=\"about\">关于</el-dropdown-item>\n                </el-dropdown-menu>\n              </template>\n            </el-dropdown>\n          </div>\n        </el-header>\n\n        <!-- 主内容区域 -->\n        <el-main class=\"main-content\">\n          <el-scrollbar>\n            <router-view v-slot=\"{ Component, route }\">\n              <transition name=\"fade\" mode=\"out-in\">\n                <component :is=\"Component\" :key=\"route.path\" />\n              </transition>\n            </router-view>\n          </el-scrollbar>\n        </el-main>\n      </el-container>\n    </el-container>\n\n    <!-- 设置对话框 -->\n    <el-dialog \n      v-model=\"showSettingsDialog\" \n      title=\"设置\" \n      width=\"500px\"\n    >\n      <div class=\"settings-content\">\n        <el-form label-width=\"120px\">\n          <el-form-item label=\"刷新间隔\">\n            <el-select \n              v-model=\"selectedRefreshInterval\" \n              placeholder=\"选择刷新间隔\"\n              @change=\"onRefreshIntervalChange\"\n            >\n              <el-option label=\"5秒\" :value=\"5000\" />\n              <el-option label=\"10秒\" :value=\"10000\" />\n              <el-option label=\"30秒\" :value=\"30000\" />\n              <el-option label=\"1分钟\" :value=\"60000\" />\n              <el-option label=\"5分钟\" :value=\"300000\" />\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"showSettingsDialog = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"saveSettings\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, onMounted, onUnmounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { \n  Odometer, Key, User, UserFilled, TrendCharts, \n  Refresh, Setting, Connection, Link \n} from '@element-plus/icons-vue';\nimport { useDashboardStore } from '../stores/dashboard';\nimport { useSocketStore } from '../stores/socket';\n\nconst route = useRoute();\nconst dashboardStore = useDashboardStore();\nconst socketStore = useSocketStore();\n\n// 临时实现formatTime函数\nconst formatTime = (dateString: string): string => {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffMs = now.getTime() - date.getTime();\n  \n  if (diffMs < 60000) { // 小于1分钟\n    return '刚刚';\n  } else if (diffMs < 3600000) { // 小于1小时\n    return `${Math.floor(diffMs / 60000)}分钟前`;\n  } else if (diffMs < 86400000) { // 小于1天\n    return `${Math.floor(diffMs / 3600000)}小时前`;\n  } else {\n    return date.toLocaleDateString('zh-CN');\n  }\n};\n\n// 响应式数据\nconst showSettingsDialog = ref(false);\nconst selectedRefreshInterval = ref(dashboardStore.refreshInterval);\nconst refreshTimer = ref<number | null>(null);\n\n// 计算属性\nconst activeMenu = computed(() => route.path);\n\nconst currentPageTitle = computed(() => {\n  const routeMeta = route.meta as { title?: string };\n  return routeMeta.title || '看板';\n});\n\nconst lastRefresh = computed(() => dashboardStore.lastRefresh);\n\nconst connectionStatusClass = computed(() => {\n  return socketStore.isConnected ? 'connected' : 'disconnected';\n});\n\nconst connectionStatusIcon = computed(() => {\n  return socketStore.isConnected ? Connection : Link;\n});\n\nconst connectionStatusText = computed(() => {\n  if (socketStore.isConnected) {\n    return '实时连接正常';\n  }\n  return socketStore.connectionError || '连接已断开';\n});\n\n// 方法\nconst refreshData = async () => {\n  await dashboardStore.refreshAllData();\n};\n\nconst onAutoRefreshChange = (enabled: boolean) => {\n  if (enabled) {\n    startAutoRefresh();\n  } else {\n    stopAutoRefresh();\n  }\n};\n\nconst onRefreshIntervalChange = (interval: number) => {\n  dashboardStore.setRefreshInterval(interval);\n  if (dashboardStore.isAutoRefresh) {\n    stopAutoRefresh();\n    startAutoRefresh();\n  }\n};\n\nconst startAutoRefresh = () => {\n  stopAutoRefresh();\n  \n  refreshTimer.value = window.setInterval(async () => {\n    if (!dashboardStore.loading) {\n      await refreshData();\n    }\n  }, dashboardStore.refreshInterval);\n};\n\nconst stopAutoRefresh = () => {\n  if (refreshTimer.value) {\n    clearInterval(refreshTimer.value);\n    refreshTimer.value = null;\n  }\n};\n\nconst handleSettingsCommand = (command: string) => {\n  switch (command) {\n    case 'refresh-interval':\n      showSettingsDialog.value = true;\n      break;\n    case 'export':\n      // TODO: 实现数据导出功能\n      console.log('Export data');\n      break;\n    case 'about':\n      // TODO: 显示关于对话框\n      console.log('About');\n      break;\n  }\n};\n\nconst saveSettings = () => {\n  dashboardStore.setRefreshInterval(selectedRefreshInterval.value);\n  showSettingsDialog.value = false;\n  \n  if (dashboardStore.isAutoRefresh) {\n    stopAutoRefresh();\n    startAutoRefresh();\n  }\n};\n\n// 生命周期\nonMounted(() => {\n  // 订阅系统指标\n  socketStore.subscribeToSystemMetrics();\n  \n  // 如果启用了自动刷新，开始定时器\n  if (dashboardStore.isAutoRefresh) {\n    startAutoRefresh();\n  }\n});\n\nonUnmounted(() => {\n  stopAutoRefresh();\n});\n</script>\n\n<style scoped>\n.dashboard-layout {\n  height: 100vh;\n  width: 100vw;\n}\n\n.sidebar {\n  background-color: #001529;\n  color: white;\n  overflow: hidden;\n}\n\n.logo {\n  padding: 20px;\n  text-align: center;\n  border-bottom: 1px solid #1f2937;\n}\n\n.logo h2 {\n  margin: 0;\n  font-size: 20px;\n  font-weight: 600;\n  color: #ffffff;\n}\n\n.subtitle {\n  font-size: 12px;\n  color: #9ca3af;\n  display: block;\n  margin-top: 4px;\n}\n\n.sidebar-menu {\n  border-right: none;\n  background-color: transparent;\n}\n\n.sidebar-menu .el-menu-item {\n  color: #d1d5db;\n}\n\n.sidebar-menu .el-menu-item:hover {\n  background-color: #1f2937;\n}\n\n.sidebar-menu .el-menu-item.is-active {\n  background-color: #1e40af;\n  color: #ffffff;\n}\n\n.header {\n  background: #fff;\n  border-bottom: 1px solid #f0f0f0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 24px;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.page-title {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 500;\n  color: #1f2937;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.connection-status .status-icon {\n  transition: color 0.3s;\n}\n\n.connection-status .connected {\n  color: #10b981;\n}\n\n.connection-status .disconnected {\n  color: #ef4444;\n}\n\n.last-refresh {\n  font-size: 12px;\n  color: #6b7280;\n}\n\n.main-content {\n  background: #f5f5f5;\n  padding: 24px;\n  overflow: hidden;\n}\n\n.settings-content {\n  padding: 20px 0;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>"],"names":["route","useRoute","dashboardStore","useDashboardStore","socketStore","useSocketStore","formatTime","dateString","date","diffMs","showSettingsDialog","ref","selectedRefreshInterval","refreshTimer","activeMenu","computed","currentPageTitle","lastRefresh","connectionStatusClass","connectionStatusIcon","Connection","Link","connectionStatusText","refreshData","onAutoRefreshChange","enabled","startAutoRefresh","stopAutoRefresh","onRefreshIntervalChange","interval","handleSettingsCommand","command","saveSettings","onMounted","onUnmounted","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_aside","_cache","_createElementVNode","_component_el_menu_item","_component_el_icon","_unref","Odometer","Key","User","UserFilled","TrendCharts","_component_el_header","_hoisted_2","_hoisted_3","_toDisplayString","_component_el_breadcrumb","_component_el_breadcrumb_item","_createTextVNode","_hoisted_5","_component_el_tooltip","_normalizeClass","_createBlock","_resolveDynamicComponent","_component_el_text","$event","Refresh","_component_el_dropdown_menu","_component_el_dropdown_item","_component_el_button","Setting","_component_el_scrollbar","_component_router_view","Component","route2","_Transition","_hoisted_8","_hoisted_7","_component_el_form","_component_el_form_item","_component_el_select","_component_el_option"],"mappings":"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"}