{"version":3,"file":"OverviewView-CYO0LY58.js","sources":["../../src/views/OverviewView.vue"],"sourcesContent":["<template>\n  <div class=\"overview-view\">\n    <!-- 顶部统计卡片 -->\n    <div class=\"stats-overview\">\n      <el-row :gutter=\"16\">\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-content\">\n              <div class=\"stat-icon\">\n                <el-icon><Key /></el-icon>\n              </div>\n              <div class=\"stat-info\">\n                <div class=\"stat-number\">{{ dashboardStore.activeApiKeys.length }}</div>\n                <div class=\"stat-title\">活跃API Keys</div>\n                <div class=\"stat-trend\">\n                  <el-icon class=\"trend-icon up\"><ArrowUp /></el-icon>\n                  <span class=\"trend-text\">+5.2%</span>\n                </div>\n              </div>\n            </div>\n          </el-card>\n        </el-col>\n\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-content\">\n              <div class=\"stat-icon expense\">\n                <el-icon><Money /></el-icon>\n              </div>\n              <div class=\"stat-info\">\n                <div class=\"stat-number\">{{ formatCurrency(dashboardStore.totalDailyCost) }}</div>\n                <div class=\"stat-title\">今日总消费</div>\n                <div class=\"stat-trend\">\n                  <el-icon class=\"trend-icon down\"><ArrowDown /></el-icon>\n                  <span class=\"trend-text\">-2.1%</span>\n                </div>\n              </div>\n            </div>\n          </el-card>\n        </el-col>\n\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-content\">\n              <div class=\"stat-icon requests\">\n                <el-icon><Promotion /></el-icon>\n              </div>\n              <div class=\"stat-info\">\n                <div class=\"stat-number\">{{ formatNumber(dashboardStore.totalTodayRequests) }}</div>\n                <div class=\"stat-title\">今日总请求</div>\n                <div class=\"stat-trend\">\n                  <el-icon class=\"trend-icon up\"><ArrowUp /></el-icon>\n                  <span class=\"trend-text\">+8.7%</span>\n                </div>\n              </div>\n            </div>\n          </el-card>\n        </el-col>\n\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-content\">\n              <div class=\"stat-icon accounts\">\n                <el-icon><User /></el-icon>\n              </div>\n              <div class=\"stat-info\">\n                <div class=\"stat-number\">{{ dashboardStore.activeAccountsCount }}</div>\n                <div class=\"stat-title\">活跃账号</div>\n                <div class=\"stat-trend\">\n                  <el-icon class=\"trend-icon up\"><ArrowUp /></el-icon>\n                  <span class=\"trend-text\">+1.3%</span>\n                </div>\n              </div>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n\n    <!-- 图表区域 -->\n    <el-row :gutter=\"16\">\n      <!-- 请求趋势图 -->\n      <el-col :span=\"12\">\n        <el-card>\n          <template #header>\n            <div class=\"chart-header\">\n              <span>今日请求趋势</span>\n              <el-radio-group v-model=\"requestsTimeRange\" size=\"small\">\n                <el-radio-button label=\"24h\">24小时</el-radio-button>\n                <el-radio-button label=\"12h\">12小时</el-radio-button>\n                <el-radio-button label=\"6h\">6小时</el-radio-button>\n              </el-radio-group>\n            </div>\n          </template>\n          <div class=\"chart-container\">\n            <v-chart :option=\"requestsChartOption\" style=\"height: 300px;\" />\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- Token使用分布 -->\n      <el-col :span=\"12\">\n        <el-card>\n          <template #header>\n            <span>Token使用分布</span>\n          </template>\n          <div class=\"chart-container\">\n            <v-chart :option=\"tokenDistributionOption\" style=\"height: 300px;\" />\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 第二行图表 -->\n    <el-row :gutter=\"16\" style=\"margin-top: 16px;\">\n      <!-- 费用趋势 -->\n      <el-col :span=\"8\">\n        <el-card>\n          <template #header>\n            <span>费用趋势</span>\n          </template>\n          <div class=\"chart-container\">\n            <v-chart :option=\"costTrendOption\" style=\"height: 250px;\" />\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 平台分布 -->\n      <el-col :span=\"8\">\n        <el-card>\n          <template #header>\n            <span>平台分布</span>\n          </template>\n          <div class=\"chart-container\">\n            <v-chart :option=\"platformDistributionOption\" style=\"height: 250px;\" />\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 实时系统指标 -->\n      <el-col :span=\"8\">\n        <el-card>\n          <template #header>\n            <div class=\"chart-header\">\n              <span>实时系统指标</span>\n              <el-tag :type=\"systemStatus\" size=\"small\">\n                {{ systemStatusText }}\n              </el-tag>\n            </div>\n          </template>\n          <div class=\"system-metrics\">\n            <div class=\"metric-item\" v-if=\"dashboardStore.systemMetrics\">\n              <div class=\"metric-label\">每分钟请求</div>\n              <div class=\"metric-value\">{{ dashboardStore.systemMetrics.requests }}</div>\n            </div>\n            <div class=\"metric-item\" v-if=\"dashboardStore.systemMetrics\">\n              <div class=\"metric-label\">总Token</div>\n              <div class=\"metric-value\">{{ formatNumber(dashboardStore.systemMetrics.totalTokens) }}</div>\n            </div>\n            <div class=\"metric-item\" v-if=\"dashboardStore.systemMetrics\">\n              <div class=\"metric-label\">输入Token</div>\n              <div class=\"metric-value\">{{ formatNumber(dashboardStore.systemMetrics.inputTokens) }}</div>\n            </div>\n            <div class=\"metric-item\" v-if=\"dashboardStore.systemMetrics\">\n              <div class=\"metric-label\">输出Token</div>\n              <div class=\"metric-value\">{{ formatNumber(dashboardStore.systemMetrics.outputTokens) }}</div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 顶部使用者和API Keys -->\n    <el-row :gutter=\"16\" style=\"margin-top: 16px;\">\n      <!-- TOP API Keys -->\n      <el-col :span=\"12\">\n        <el-card>\n          <template #header>\n            <span>使用量TOP API Keys</span>\n          </template>\n          <div class=\"top-list\">\n            <div \n              v-for=\"(apiKey, index) in topApiKeys\" \n              :key=\"apiKey.keyId\"\n              class=\"top-item\"\n            >\n              <div class=\"rank\">{{ index + 1 }}</div>\n              <div class=\"item-info\">\n                <div class=\"item-name\">{{ apiKey.name }}</div>\n                <div class=\"item-detail\">\n                  {{ formatNumber(apiKey.usage?.today?.requests || 0) }} 请求 • \n                  {{ formatCurrency(apiKey.usage?.today?.cost || 0) }}\n                </div>\n              </div>\n              <div class=\"item-progress\">\n                <el-progress \n                  :percentage=\"getUsagePercentage(apiKey.usage?.today?.requests || 0)\"\n                  :stroke-width=\"6\"\n                  :show-text=\"false\"\n                />\n              </div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- TOP 账号 -->\n      <el-col :span=\"12\">\n        <el-card>\n          <template #header>\n            <span>使用量TOP 账号</span>\n          </template>\n          <div class=\"top-list\">\n            <div \n              v-for=\"(account, index) in dashboardStore.topUsageAccounts\" \n              :key=\"account.accountId\"\n              class=\"top-item\"\n            >\n              <div class=\"rank\">{{ index + 1 }}</div>\n              <div class=\"item-info\">\n                <div class=\"item-name\">{{ account.accountName }}</div>\n                <div class=\"item-detail\">\n                  {{ formatNumber(account.todayTokenUsage) }} Tokens • \n                  {{ formatCurrency(account.todayExpense) }}\n                </div>\n              </div>\n              <div class=\"item-progress\">\n                <el-progress \n                  :percentage=\"getTokenPercentage(account.todayTokenUsage)\"\n                  :stroke-width=\"6\"\n                  :show-text=\"false\"\n                />\n              </div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, watch } from 'vue';\nimport { use } from 'echarts/core';\nimport { LineChart, PieChart, BarChart } from 'echarts/charts';\nimport { \n  TitleComponent, \n  TooltipComponent, \n  LegendComponent,\n  GridComponent \n} from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport VChart from 'vue-echarts';\n\nimport {\n  Key, Money, Promotion, User,\n  ArrowUp, ArrowDown\n} from '@element-plus/icons-vue';\n\nimport { useDashboardStore } from '../stores/dashboard';\nimport { formatNumber, formatCurrency } from '../utils/format';\n\n// 注册ECharts组件\nuse([\n  LineChart,\n  PieChart,\n  BarChart,\n  TitleComponent,\n  TooltipComponent,\n  LegendComponent,\n  GridComponent,\n  CanvasRenderer\n]);\n\nconst dashboardStore = useDashboardStore();\n\n// 响应式数据\nconst requestsTimeRange = ref('24h');\n\n// 计算属性\nconst topApiKeys = computed(() => {\n  return dashboardStore.apiKeys\n    .sort((a, b) => (b.usage?.today?.requests || 0) - (a.usage?.today?.requests || 0))\n    .slice(0, 5);\n});\n\nconst systemStatus = computed(() => {\n  if (!dashboardStore.systemMetrics) return 'info';\n  const requests = dashboardStore.systemMetrics.requests;\n  if (requests > 100) return 'danger';\n  if (requests > 50) return 'warning';\n  return 'success';\n});\n\nconst systemStatusText = computed(() => {\n  const statusMap = {\n    'success': '正常',\n    'warning': '繁忙',\n    'danger': '高负载',\n    'info': '无数据'\n  };\n  return statusMap[systemStatus.value] || '无数据';\n});\n\n// 图表配置\nconst requestsChartOption = computed(() => {\n  // 模拟24小时数据\n  const hours = Array.from({ length: 24 }, (_, i) => `${i.toString().padStart(2, '0')}:00`);\n  const data = Array.from({ length: 24 }, () => Math.floor(Math.random() * 100) + 50);\n\n  return {\n    tooltip: {\n      trigger: 'axis',\n      formatter: '{a}: {c} 请求'\n    },\n    xAxis: {\n      type: 'category',\n      data: hours,\n      boundaryGap: false\n    },\n    yAxis: {\n      type: 'value',\n      name: '请求数'\n    },\n    series: [{\n      name: '请求数',\n      type: 'line',\n      data: data,\n      smooth: true,\n      areaStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [\n            { offset: 0, color: 'rgba(59, 130, 246, 0.5)' },\n            { offset: 1, color: 'rgba(59, 130, 246, 0.1)' }\n          ]\n        }\n      },\n      lineStyle: {\n        color: '#3b82f6'\n      }\n    }]\n  };\n});\n\nconst tokenDistributionOption = computed(() => {\n  const data = [\n    { name: 'Input Tokens', value: 45 },\n    { name: 'Output Tokens', value: 30 },\n    { name: 'Cache Create', value: 15 },\n    { name: 'Cache Read', value: 10 }\n  ];\n\n  return {\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b}: {c}% ({d}%)'\n    },\n    series: [{\n      name: 'Token分布',\n      type: 'pie',\n      radius: ['40%', '70%'],\n      data: data,\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }]\n  };\n});\n\nconst costTrendOption = computed(() => {\n  const days = ['周一', '周二', '周三', '周四', '周五', '周六', '周日'];\n  const costs = [120, 132, 101, 134, 90, 230, 210];\n\n  return {\n    tooltip: {\n      trigger: 'axis',\n      formatter: '{a}: ${c}'\n    },\n    xAxis: {\n      type: 'category',\n      data: days\n    },\n    yAxis: {\n      type: 'value',\n      name: '费用 ($)'\n    },\n    series: [{\n      name: '费用',\n      type: 'bar',\n      data: costs,\n      itemStyle: {\n        color: '#10b981'\n      }\n    }]\n  };\n});\n\nconst platformDistributionOption = computed(() => {\n  const platformData = dashboardStore.accounts.reduce((acc, account) => {\n    acc[account.platform] = (acc[account.platform] || 0) + 1;\n    return acc;\n  }, {} as Record<string, number>);\n\n  const data = Object.entries(platformData).map(([name, value]) => ({ name, value }));\n\n  return {\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b}: {c} ({d}%)'\n    },\n    series: [{\n      name: '平台分布',\n      type: 'pie',\n      radius: '60%',\n      data: data,\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }]\n  };\n});\n\n// 方法\nconst getUsagePercentage = (requests: number): number => {\n  const maxRequests = Math.max(...topApiKeys.value.map(key => key.usage?.today?.requests || 0));\n  return maxRequests > 0 ? (requests / maxRequests) * 100 : 0;\n};\n\nconst getTokenPercentage = (tokens: number): number => {\n  const maxTokens = Math.max(...dashboardStore.topUsageAccounts.map(acc => acc.todayTokenUsage));\n  return maxTokens > 0 ? (tokens / maxTokens) * 100 : 0;\n};\n\n// 生命周期\nonMounted(() => {\n  // 初始化数据\n  dashboardStore.initializeData();\n});\n</script>\n\n<style scoped>\n.overview-view {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.stats-overview {\n  margin-bottom: 16px;\n}\n\n.stat-card {\n  height: 120px;\n}\n\n.stat-content {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  height: 100%;\n}\n\n.stat-icon {\n  font-size: 32px;\n  color: #3b82f6;\n  background: rgba(59, 130, 246, 0.1);\n  width: 56px;\n  height: 56px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.stat-icon.expense {\n  color: #ef4444;\n  background: rgba(239, 68, 68, 0.1);\n}\n\n.stat-icon.requests {\n  color: #10b981;\n  background: rgba(16, 185, 129, 0.1);\n}\n\n.stat-icon.accounts {\n  color: #f59e0b;\n  background: rgba(245, 158, 11, 0.1);\n}\n\n.stat-info {\n  flex: 1;\n}\n\n.stat-number {\n  font-size: 24px;\n  font-weight: bold;\n  color: #1f2937;\n  line-height: 1;\n  margin-bottom: 4px;\n}\n\n.stat-title {\n  font-size: 14px;\n  color: #6b7280;\n  margin-bottom: 8px;\n}\n\n.stat-trend {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.trend-icon {\n  font-size: 12px;\n}\n\n.trend-icon.up {\n  color: #10b981;\n}\n\n.trend-icon.down {\n  color: #ef4444;\n}\n\n.trend-text {\n  font-size: 12px;\n  font-weight: 600;\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.chart-container {\n  padding: 8px;\n}\n\n.system-metrics {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 16px;\n  padding: 16px;\n}\n\n.metric-item {\n  text-align: center;\n}\n\n.metric-label {\n  font-size: 12px;\n  color: #6b7280;\n  margin-bottom: 8px;\n}\n\n.metric-value {\n  font-size: 18px;\n  font-weight: bold;\n  color: #1f2937;\n}\n\n.top-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.top-item {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 8px;\n  border-radius: 6px;\n  background: #f9fafb;\n  transition: background-color 0.2s;\n}\n\n.top-item:hover {\n  background: #f3f4f6;\n}\n\n.rank {\n  width: 24px;\n  height: 24px;\n  background: #3b82f6;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: bold;\n}\n\n.item-info {\n  flex: 1;\n}\n\n.item-name {\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 2px;\n}\n\n.item-detail {\n  font-size: 12px;\n  color: #6b7280;\n}\n\n.item-progress {\n  width: 80px;\n}\n</style>"],"names":["use","LineChart","PieChart","BarChart","TitleComponent","TooltipComponent","LegendComponent","GridComponent","CanvasRenderer","dashboardStore","useDashboardStore","requestsTimeRange","ref","topApiKeys","computed","a","b","_b","_a","_d","_c","systemStatus","requests","systemStatusText","requestsChartOption","hours","_","i","data","tokenDistributionOption","costTrendOption","platformDistributionOption","platformData","acc","account","name","value","getUsagePercentage","maxRequests","key","getTokenPercentage","tokens","maxTokens","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_row","_withCtx","_component_el_col","_component_el_card","_hoisted_3","_hoisted_4","_component_el_icon","_unref","Key","_hoisted_6","_toDisplayString","_cache","_hoisted_7","ArrowUp","_hoisted_8","_hoisted_9","Money","_hoisted_11","formatCurrency","_hoisted_12","ArrowDown","_hoisted_13","_hoisted_14","Promotion","_hoisted_16","formatNumber","_hoisted_17","_hoisted_18","_hoisted_19","User","_hoisted_21","_hoisted_22","_hoisted_23","_component_el_radio_group","$event","_component_el_radio_button","_createTextVNode","_hoisted_24","VChart","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_component_el_tag","_hoisted_29","_hoisted_30","_hoisted_31","_createCommentVNode","_hoisted_33","_hoisted_35","_hoisted_37","_hoisted_38","_Fragment","_renderList","apiKey","index","_hoisted_40","_hoisted_41","_hoisted_42","_component_el_progress","_f","_e","_hoisted_44","_hoisted_46","_hoisted_47","_hoisted_48"],"mappings":"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"}